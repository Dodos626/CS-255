(gdb) x/79i readString
   0x8048aac <readString>:      push   %ebp                         //esp(stack pointer) ebp(stack base pointer)
   0x8048aad <readString+1>:    mov    %esp,%ebp                    //desmeuei mnimi 
   0x8048aaf <readString+3>:    sub    $0x34,%esp
   0x8048ab2 <readString+6>:    movl   $0x0,-0x4(%ebp)              //i=0
   0x8048ab9 <readString+13>:   mov    0x80d4b44,%eax               //while(1)
   0x8048abe <readString+18>:   push   %eax                         // c = fgetc(stdin);
   0x8048abf <readString+19>:   call   0x8050850 <getc>
   0x8048ac4 <readString+24>:   add    $0x4,%esp
   0x8048ac7 <readString+27>:   mov    %eax,-0x8(%ebp)
   0x8048aca <readString+30>:   cmpl   $0xffffffff,-0x8(%ebp)       // if((c == EOF) || (c == '\n')) 
   0x8048ace <readString+34>:   je     0x8048ae8 <readString+60>
   0x8048ad0 <readString+36>:   cmpl   $0xa,-0x8(%ebp)              // to c == '\n' einai edw san compare
   0x8048ad4 <readString+40>:   je     0x8048ae8 <readString+60>
   0x8048ad6 <readString+42>:   mov    -0x4(%ebp),%eax              // buf[i++] = c; 
   0x8048ad9 <readString+45>:   lea    0x1(%eax),%edx
   0x8048adc <readString+48>:   mov    %edx,-0x4(%ebp)
   0x8048adf <readString+51>:   mov    -0x8(%ebp),%edx
   0x8048ae2 <readString+54>:   mov    %dl,-0x34(%ebp,%eax,1)       // edw teleiwnei to buf[i++] = c;
   0x8048ae6 <readString+58>:   jmp    0x8048ab9 <readString+13>    //pisw stin arxi tou while
   0x8048ae8 <readString+60>:   lea    -0x34(%ebp),%edx             //buf[i] = 0
   0x8048aeb <readString+63>:   mov    -0x4(%ebp),%eax
   0x8048aee <readString+66>:   add    %edx,%eax
   0x8048af0 <readString+68>:   movb   $0x0,(%eax)
   0x8048af3 <readString+71>:   movl   $0x0,-0x4(%ebp)              //for (i = 0; i < BUFSIZE; i++)
   0x8048afa <readString+78>:   jmp    0x8048b15 <readString+105>   // jump stin sigkrisi
   0x8048afc <readString+80>:   mov    -0x4(%ebp),%edx
   0x8048aff <readString+83>:   mov    0x8(%ebp),%eax
   0x8048b02 <readString+86>:   add    %eax,%edx
   0x8048b04 <readString+88>:   lea    -0x34(%ebp),%ecx             
   0x8048b07 <readString+91>:   mov    -0x4(%ebp),%eax
   0x8048b0a <readString+94>:   add    %ecx,%eax                    //s[i]=buf[i];
   0x8048b0c <readString+96>:   movzbl (%eax),%eax
   0x8048b0f <readString+99>:   mov    %al,(%edx)
   0x8048b11 <readString+101>:  addl   $0x1,-0x4(%ebp)              // i++
   0x8048b15 <readString+105>:  cmpl   $0x2b,-0x4(%ebp)             // edw ginete i sigkrisi
   0x8048b19 <readString+109>:  jle    0x8048afc <readString+80>    // jump stis entoles mesa stin for loop
   0x8048b1b <readString+111>:  nop
   0x8048b1c <readString+112>:  leave
   0x8048b1d <readString+113>:  ret                                 //return

                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~         MAIN       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    
   0x8048b1e <main>:    push   %ebp
   0x8048b1f <main+1>:  mov    %esp,%ebp
   0x8048b21 <main+3>:  mov    $0x80d65e0,%eax          //char name
   0x8048b26 <main+8>:  and    $0xfffff000,%eax         //mprotect((void*)((unsigned int)Name & 0xfffff000), 1,PROT_READ | PROT_WRITE | PROT_EXEC);
   0x8048b2b <main+13>: push   $0x7                          
   0x8048b2d <main+15>: push   $0x1                     
   0x8048b2f <main+17>: push   %eax                     
   0x8048b30 <main+18>: call   0x805e180 <mprotect>     //telos mprotect
   0x8048b35 <main+23>: add    $0xc,%esp                //etoimaei to string "What is your name?\n"
   0x8048b38 <main+26>: push   $0x80ab0a8
   0x8048b3d <main+31>: call   0x804f070 <puts>         //printf("What is your name?\n");
   0x8048b42 <main+36>: add    $0x4,%esp                
   0x8048b45 <main+39>: push   $0x80d65e0
   0x8048b4a <main+44>: call   0x8048aac <readString>   //calls readString
   0x8048b4f <main+49>: add    $0x4,%esp
   0x8048b52 <main+52>: push   $0x80ab0bb
   0x8048b57 <main+57>: push   $0x80d65e0
   0x8048b5c <main+62>: call   0x805af90 <strcmp>       //(strcmp(Name, "Angelos Bilas")
   0x8048b61 <main+67>: add    $0x8,%esp
   0x8048b64 <main+70>: test   %eax,%eax
   0x8048b66 <main+72>: jne    0x8048b6f <main+81>
   0x8048b68 <main+74>: movb   $0x36,0x80d46e8          //grade = '6';
   0x8048b6f <main+81>: push   $0x80d65e0               // name
   0x8048b74 <main+86>: push   $0x80ab0c9               // "Thank you, %s.\n"
   0x8048b79 <main+91>: call   0x804eaf0 <printf>       //printf("Thank you, %s.\n", Name);
   0x8048b7e <main+96>: add    $0x8,%esp
   0x8048b81 <main+99>: movzbl 0x80d46e8,%eax           // grade
   0x8048b88 <main+106>:movsbl %al,%eax
   0x8048b8b <main+109>:push   %eax
   0x8048b8c <main+110>:push   $0x80ab0dc               // "I recommend that you get a grade of %c on this assignment.\n"
   0x8048b91 <main+115>:call   0x804eaf0 <printf>       //printf("I recommend that you get a grade of %c on this assignment.\n",grade);
   0x8048b96 <main+120>:add    $0x8,%esp
   0x8048b99 <main+123>:push   $0x0
   0x8048b9b <main+125>:call   0x804e110 <exit>
   0x8048ba0 <__libc_start_main>:       push   %ebp
   0x8048ba1 <__libc_start_main+1>:     mov    $0x0,%eax
   0x8048ba6 <__libc_start_main+6>:     push   %edi
   0x8048ba7 <__libc_start_main+7>:     push   %esi
   0x8048ba8 <__libc_start_main+8>:     push   %ebx
   0x8048ba9 <__libc_start_main+9>:     sub    $0x4c,%esp


                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~         DATA       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(gdb) print &grade
$1 = 0x80d46e8 <grade> "3"

(gdb) print grade
$2 = 51 '3'

to data periexei mono tin grade = 3 metabliti stin thesi 0x80d46e8

                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~         BSS        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(gdb) print &Name
$3 = (char (*)[44]) 0x80d65e0 <Name>

to bss periexei ton pinaka char Name[BUFSIZE] pu einai 44 thesewn kai ksekinaei stin thesi 0x80d65e0


                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     Stack Frame     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(gdb) p $esp
$1 = (void *) 0xbffff528
(gdb) p $ebp
$2 = (void *) 0xbffff55c
(gdb) p c
$3 = 10
(gdb) p &c
$4 = (int *) 0xbffff554
(gdb) p &buf
$5 = (char (*)[44]) 0xbffff528
(gdb) p i
$6 = 19
(gdb) p &i
$7 = (int *) 0xbffff558
(gdb) x/52b $esp
0xbffff528:     116     104     101     111     100     111     114     111
0xbffff530:     115     32      99      104     97      108     107     105
0xbffff538:     100     105     115     0       18      0       0       0
0xbffff540:     1       0       0       0       -12     -11     -1      -65
0xbffff548:     -4      -11     -1      -65     1       0       0       0
0xbffff550:     52      -128    4       8       10      0       0       0
0xbffff558:     19      0       0       0

Diagramma tou stack:

						     ------------------
				0xbffff528:|      %esp       |
				           ------------------
				0xbffff528:|      buf        |
				           ------------------
				0xbffff554:|      c=10       |
				       	  ------------------
				0xbffff558:|      i =19      |
				           ------------------
				0xbffff55c:|      %ebp       |
				           ------------------
		      0xbffff560:|  return address |
		                 ------------------

to return_address einai stin thesi 0xbffff55c + 4 = 0xbffff560
to input mpainei apo s=0x80d65e0 pou einai i dieythinsh tou name
Breakpoint 1, readString (s=0x80d65e0 <Name> "") at hello.c:22